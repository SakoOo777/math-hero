{"ast":null,"code":"// توليد أسئلة حسب المستوى المطلوب\nexport const generateQuestions = level => {\n  const questions = [];\n  for (let i = 0; i < 20; i++) {\n    let question = {};\n    switch (level) {\n      case 'easy':\n        question = generateEasyQuestion();\n        break;\n      case 'medium':\n        question = generateMediumQuestion();\n        break;\n      case 'hard':\n        question = generateHardQuestion();\n        break;\n      default:\n        break;\n    }\n    questions.push(question);\n  }\n  return questions;\n};\n\n// ✅ توليد سؤال سهل: جمع أو طرح لأعداد من خانة واحدة\nconst generateEasyQuestion = () => {\n  const a = Math.floor(Math.random() * 9) + 1;\n  const b = Math.floor(Math.random() * 9) + 1;\n  const op = Math.random() > 0.5 ? '+' : '-';\n  const answer = op === '+' ? a + b : a - b;\n  return {\n    question: `${a} ${op} ${b}`,\n    answer,\n    type: Math.random() > 0.5 ? 'multiple' : 'input'\n  };\n};\n\n// ✅ توليد سؤال متوسط: جمع، طرح، ضرب، أو قسمة بدون باقي\nconst generateMediumQuestion = () => {\n  const type = Math.floor(Math.random() * 4);\n  let a, b, answer, question;\n  switch (type) {\n    case 0:\n      // جمع\n      a = Math.floor(Math.random() * 100);\n      b = Math.floor(Math.random() * 100);\n      answer = a + b;\n      question = `${a} + ${b}`;\n      break;\n    case 1:\n      // طرح\n      a = Math.floor(Math.random() * 100);\n      b = Math.floor(Math.random() * a); // لضمان عدم السالب\n      answer = a - b;\n      question = `${a} - ${b}`;\n      break;\n    case 2:\n      // ضرب\n      a = Math.floor(Math.random() * 9) + 1;\n      b = Math.floor(Math.random() * 9) + 1;\n      answer = a * b;\n      question = `${a} × ${b}`;\n      break;\n    case 3:\n      // قسمة بدون باقي\n      b = Math.floor(Math.random() * 9) + 1;\n      answer = Math.floor(Math.random() * 10) + 1;\n      a = b * answer;\n      question = `${a} ÷ ${b}`;\n      break;\n  }\n  return {\n    question,\n    answer,\n    type: Math.random() > 0.5 ? 'multiple' : 'input'\n  };\n};\n\n// ✅ توليد سؤال محترف: عمليات متنوعة تشمل أعداد أكبر\nconst generateHardQuestion = () => {\n  const a = Math.floor(Math.random() * 100) + 1;\n  const b = Math.floor(Math.random() * 50) + 1;\n  const op = ['+', '-', '×', '÷'][Math.floor(Math.random() * 4)];\n  let answer;\n  switch (op) {\n    case '+':\n      answer = a + b;\n      break;\n    case '-':\n      answer = a - b;\n      break;\n    case '×':\n      answer = a * b;\n      break;\n    case '÷':\n      answer = Math.floor(a / b);\n      break;\n  }\n  return {\n    question: `${a} ${op} ${b}`,\n    answer,\n    type: Math.random() > 0.5 ? 'multiple' : 'input'\n  };\n};","map":{"version":3,"names":["generateQuestions","level","questions","i","question","generateEasyQuestion","generateMediumQuestion","generateHardQuestion","push","a","Math","floor","random","b","op","answer","type"],"sources":["C:/Users/samaa/first_project/src/utils/questionGenerator.js"],"sourcesContent":["// توليد أسئلة حسب المستوى المطلوب\r\nexport const generateQuestions = (level) => {\r\n  const questions = [];\r\n\r\n  for (let i = 0; i < 20; i++) {\r\n    let question = {};\r\n    switch (level) {\r\n      case 'easy':\r\n        question = generateEasyQuestion();\r\n        break;\r\n      case 'medium':\r\n        question = generateMediumQuestion();\r\n        break;\r\n      case 'hard':\r\n        question = generateHardQuestion();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    questions.push(question);\r\n  }\r\n\r\n  return questions;\r\n};\r\n\r\n// ✅ توليد سؤال سهل: جمع أو طرح لأعداد من خانة واحدة\r\nconst generateEasyQuestion = () => {\r\n  const a = Math.floor(Math.random() * 9) + 1;\r\n  const b = Math.floor(Math.random() * 9) + 1;\r\n  const op = Math.random() > 0.5 ? '+' : '-';\r\n  const answer = op === '+' ? a + b : a - b;\r\n\r\n  return {\r\n    question: `${a} ${op} ${b}`,\r\n    answer,\r\n    type: Math.random() > 0.5 ? 'multiple' : 'input'\r\n  };\r\n};\r\n\r\n// ✅ توليد سؤال متوسط: جمع، طرح، ضرب، أو قسمة بدون باقي\r\nconst generateMediumQuestion = () => {\r\n  const type = Math.floor(Math.random() * 4);\r\n  let a, b, answer, question;\r\n\r\n  switch (type) {\r\n    case 0: // جمع\r\n      a = Math.floor(Math.random() * 100);\r\n      b = Math.floor(Math.random() * 100);\r\n      answer = a + b;\r\n      question = `${a} + ${b}`;\r\n      break;\r\n    case 1: // طرح\r\n      a = Math.floor(Math.random() * 100);\r\n      b = Math.floor(Math.random() * a); // لضمان عدم السالب\r\n      answer = a - b;\r\n      question = `${a} - ${b}`;\r\n      break;\r\n    case 2: // ضرب\r\n      a = Math.floor(Math.random() * 9) + 1;\r\n      b = Math.floor(Math.random() * 9) + 1;\r\n      answer = a * b;\r\n      question = `${a} × ${b}`;\r\n      break;\r\n    case 3: // قسمة بدون باقي\r\n      b = Math.floor(Math.random() * 9) + 1;\r\n      answer = Math.floor(Math.random() * 10) + 1;\r\n      a = b * answer;\r\n      question = `${a} ÷ ${b}`;\r\n      break;\r\n  }\r\n\r\n  return {\r\n    question,\r\n    answer,\r\n    type: Math.random() > 0.5 ? 'multiple' : 'input'\r\n  };\r\n};\r\n\r\n// ✅ توليد سؤال محترف: عمليات متنوعة تشمل أعداد أكبر\r\nconst generateHardQuestion = () => {\r\n  const a = Math.floor(Math.random() * 100) + 1;\r\n  const b = Math.floor(Math.random() * 50) + 1;\r\n  const op = ['+', '-', '×', '÷'][Math.floor(Math.random() * 4)];\r\n  let answer;\r\n\r\n  switch (op) {\r\n    case '+':\r\n      answer = a + b;\r\n      break;\r\n    case '-':\r\n      answer = a - b;\r\n      break;\r\n    case '×':\r\n      answer = a * b;\r\n      break;\r\n    case '÷':\r\n      answer = Math.floor(a / b);\r\n      break;\r\n  }\r\n\r\n  return {\r\n    question: `${a} ${op} ${b}`,\r\n    answer,\r\n    type: Math.random() > 0.5 ? 'multiple' : 'input'\r\n  };\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,iBAAiB,GAAIC,KAAK,IAAK;EAC1C,MAAMC,SAAS,GAAG,EAAE;EAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,IAAIC,QAAQ,GAAG,CAAC,CAAC;IACjB,QAAQH,KAAK;MACX,KAAK,MAAM;QACTG,QAAQ,GAAGC,oBAAoB,CAAC,CAAC;QACjC;MACF,KAAK,QAAQ;QACXD,QAAQ,GAAGE,sBAAsB,CAAC,CAAC;QACnC;MACF,KAAK,MAAM;QACTF,QAAQ,GAAGG,oBAAoB,CAAC,CAAC;QACjC;MACF;QACE;IACJ;IACAL,SAAS,CAACM,IAAI,CAACJ,QAAQ,CAAC;EAC1B;EAEA,OAAOF,SAAS;AAClB,CAAC;;AAED;AACA,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;EACjC,MAAMI,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAC3C,MAAMC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAC3C,MAAME,EAAE,GAAGJ,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;EAC1C,MAAMG,MAAM,GAAGD,EAAE,KAAK,GAAG,GAAGL,CAAC,GAAGI,CAAC,GAAGJ,CAAC,GAAGI,CAAC;EAEzC,OAAO;IACLT,QAAQ,EAAE,GAAGK,CAAC,IAAIK,EAAE,IAAID,CAAC,EAAE;IAC3BE,MAAM;IACNC,IAAI,EAAEN,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,GAAG;EAC3C,CAAC;AACH,CAAC;;AAED;AACA,MAAMN,sBAAsB,GAAGA,CAAA,KAAM;EACnC,MAAMU,IAAI,GAAGN,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1C,IAAIH,CAAC,EAAEI,CAAC,EAAEE,MAAM,EAAEX,QAAQ;EAE1B,QAAQY,IAAI;IACV,KAAK,CAAC;MAAE;MACNP,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MACnCC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MACnCG,MAAM,GAAGN,CAAC,GAAGI,CAAC;MACdT,QAAQ,GAAG,GAAGK,CAAC,MAAMI,CAAC,EAAE;MACxB;IACF,KAAK,CAAC;MAAE;MACNJ,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MACnCC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,CAAC,CAAC,CAAC,CAAC;MACnCM,MAAM,GAAGN,CAAC,GAAGI,CAAC;MACdT,QAAQ,GAAG,GAAGK,CAAC,MAAMI,CAAC,EAAE;MACxB;IACF,KAAK,CAAC;MAAE;MACNJ,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MACrCC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MACrCG,MAAM,GAAGN,CAAC,GAAGI,CAAC;MACdT,QAAQ,GAAG,GAAGK,CAAC,MAAMI,CAAC,EAAE;MACxB;IACF,KAAK,CAAC;MAAE;MACNA,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MACrCG,MAAM,GAAGL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;MAC3CH,CAAC,GAAGI,CAAC,GAAGE,MAAM;MACdX,QAAQ,GAAG,GAAGK,CAAC,MAAMI,CAAC,EAAE;MACxB;EACJ;EAEA,OAAO;IACLT,QAAQ;IACRW,MAAM;IACNC,IAAI,EAAEN,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,GAAG;EAC3C,CAAC;AACH,CAAC;;AAED;AACA,MAAML,oBAAoB,GAAGA,CAAA,KAAM;EACjC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;EAC7C,MAAMC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;EAC5C,MAAME,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9D,IAAIG,MAAM;EAEV,QAAQD,EAAE;IACR,KAAK,GAAG;MACNC,MAAM,GAAGN,CAAC,GAAGI,CAAC;MACd;IACF,KAAK,GAAG;MACNE,MAAM,GAAGN,CAAC,GAAGI,CAAC;MACd;IACF,KAAK,GAAG;MACNE,MAAM,GAAGN,CAAC,GAAGI,CAAC;MACd;IACF,KAAK,GAAG;MACNE,MAAM,GAAGL,IAAI,CAACC,KAAK,CAACF,CAAC,GAAGI,CAAC,CAAC;MAC1B;EACJ;EAEA,OAAO;IACLT,QAAQ,EAAE,GAAGK,CAAC,IAAIK,EAAE,IAAID,CAAC,EAAE;IAC3BE,MAAM;IACNC,IAAI,EAAEN,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,GAAG;EAC3C,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}